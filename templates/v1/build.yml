parameters:
- name: netCoreVersion
  displayName: "It's .net core sdk version to download on agent machine"
  type: 'string'
  default:  '6.0.400'
- name: netCoreAppVersion
  displayName: "It's a .net core application version to build"
  type: string
  default: 'net6.0'
- name: runtimeIdentifier
  displayName: 'An identifier for witch OS version this gonna be built'
  default: 'linux-x64'
- name: mainProject
  displayName: 'The full path with main project name'
- name: mainProjectName
  displayName: 'The name of project will be published'
  type: string
- name: productName
  displayName: 'The productName of project will be published'
  type: string
  
steps:

- task: DownloadSecureFile@1
  displayName: 'Download secure file'
  inputs:
    secureFile: Nuget.config

- task: CopyFiles@2
  displayName: 'Copy Files to: .'
  inputs:
    SourceFolder: '$(Agent.TempDirectory)'
    Contents: Nuget.config
    TargetFolder: .
    OverWrite: true

- task: UseDotNet@2
  displayName: 'Use .NET Core sdk ${{ parameters.netCoreVersion }}'
  inputs:
    version: ${{ parameters.netCoreVersion }}

- task: bleddynrichards.Assembly-Info-Task.Assembly-Info-NetCore.Assembly-Info-NetCore@2
  displayName: 'Set Assembly Manifest Data'
  inputs:
    InsertAttributes: true
    Authors: 'TMS'
    Company: StoneCo
    Product: '${{ parameters.productName }}'
    Description: '${{ parameters.mainProjectName }}'
    Copyright: 'Copyright Â© $(date:yyyy) StoneCo'
    VersionNumber: '$(Build.BuildNumber)'
    FileVersionNumber: '$(Build.BuildNumber)'
    InformationalVersion: '$(Build.BuildNumber)'
    PackageVersion: '$(Build.BuildNumber)'

- task: DotNetCoreCLI@2
  displayName: 'Building ${{ parameters.mainProject }}'
  inputs:
    command: build
    publishWebProjects: false
    projects: ${{ parameters.mainProject }}
    arguments: '-f ${{ parameters.netCoreAppVersion }} -c Release -r ${{ parameters.runtimeIdentifier }} --configfile Nuget.config'
    zipAfterPublish: false
    modifyOutputPath: false